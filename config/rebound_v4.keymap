/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LWR     1
#define RAS     2
#define ADJ     3

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
    };
  };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        am: amethyst_modifyers {
            compatible = "zmk,behavior-hold-tap";
            label = "AMETHYST_MODIFYER";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
        compatible = "zmk,keymap";

        default_layer {        
            label = "Default";              					  
		    bindings = <
        &kp GRAVE           &kp Q       &kp W       &kp E       &kp R         &kp T                                    &kp Y       &kp U         &kp I         &kp O       &kp P           &kp BSPC
        &kp ESC             &kp A       &kp S       &kp D       &kp F         &kp G           &kp  LA(TAB)             &kp H       &kp J         &kp K         &kp L       &kp SEMI        &kp SQT
        &kp LSHIFT          &kp Z       &kp X       &kp C       &kp V         &kp B              &none                 &kp N       &kp M         &kp COMMA     &kp DOT     &kp FSLH        &kp ENTER
        &none               &none       &none       &mo LWR     &kp LCMD      &kp SPACE          &none                 &kp SPACE   &kp TAB       &mo RAS       &none       &none           &none
                        >;
			            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
                };

        lower_layer {        
            label = "Lower";              					  
		    bindings = <
        &kp LA(TAB)         &kp LEFT_BRACE         &kp RIGHT_BRACE         &kp LEFT_BRACKET       &kp RIGHT_BRACKET      &kp F11                                   &none        &none       &kp UP      &kp MINUS   &kp EQUAL       &kp DEL 
        &none               &kp F1                 &kp F2                  &kp F3                 &kp F4                 &kp F5           &kp LA(RG(SPACE))           &kp HOME     &kp LEFT    &kp DOWN    &kp RIGHT   &trans          &kp PIPE 
        &trans              &kp F6                 &kp F7                  &kp F8                 &kp F9                 &kp F10               &none                  &kp END      &none       &kp PG_UP   &kp END     &none           &kp ENTER
        &none               &none                  &none                   &trans                 &none                  &kp F12               &none                  &trans       &kp BSPC     &kp PG_DN   &none       &none           &none
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
                };
        raise_layer {        
            label = "Raise";              					  
		    bindings = <
        &kp EQUAL           &kp N1      &kp N2      &kp N3     &kp LEFT_BRACKET   &kp RIGHT_BRACKET                                 &none                   &none         &none         &none       &none             &none 
        &none               &kp N4      &kp N5      &kp N6     &kp LPAR           &kp RPAR                   &none                  &kp LEFT                &kp DOWN      &kp UP        &kp RIGHT   &kp LEFT_BRACKET  &kp RIGHT_BRACKET 
        &trans              &kp N7      &kp N8      &kp N9     &kp N0             &none                      &none                  &kp HOME                &kp END       &kp PG_DN     &kp PG_UP   &none             &trans
        &none               &none       &none       &trans     &none              &trans                     &none                  &trans                  &none         &trans        &none       &kp C_MUTE        &trans
                        >;
			            sensor-bindings = <&inc_dec_kp LG(LS(RBKT)) LG(LS(LBKT))>;
                };
        adjust_layer {        
            label = "Adjust";              					  
		    bindings = <
        &trans              &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3    &bt BT_CLR                                      &kp N6                  &kp N7        &kp N8        &kp N9      &kp N0          &none 
        &none               &none        &none        &none        &none           &none                    &kp QMARK              &kp LEFT                &kp DOWN      &kp UP        &kp RIGHT   &trans          &none 
        &none               &none        &none        &none        &none           &none                    &none                  &kp HOME                &kp PG_DN     &kp PG_UP     &kp END     &none           &none 
        &none               &none        &none        &trans       &none           &trans                   &none                  &trans                  &none         &trans        &none       &none           &trans
                        >;
			            sensor-bindings = <&inc_dec_kp LG(LS(LBKT)) LG(LS(RBKT))>;
                };       
        };
};